name: Go

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v ./...

    - name: Start Vault container
      run: docker-compose -f scripts/docker-compose.yml up -d 
      env:
        VAULT_TOKEN: my-root-token
        VAULT_VOLUME: /tmp/vault/data/vault-volume
    
    - name: Debug
      run: docker ps -a

    - name: Run Medusa import
      run: ./medusa import secret ./test/data/import-example-1.yaml -a="http://0.0.0.0:8201" -t="my-root-token" --insecure

    - name: Run Medusa export yaml
      run: ./medusa export secret/A -a="http://0.0.0.0:8201" -t="my-root-token" --insecure
    
    - name: Run Medusa export json
      run: ./medusa export secret/A -a="http://0.0.0.0:8201" -t="my-root-token" --format="json" --insecure

    - name: Get secret
      run: "curl -H 'X-Vault-Token: my-root-token' -X GET http://0.0.0.0:8201/v1/secret/data/A/B/C/D/Db"
    - name: Go Report update
      if: ${{ github.repository == 'jonasvinther/medusa' }}
      run: "curl -X POST -F \"repo=github.com/$GITHUB_REPOSITORY\" https://goreportcard.com/checks"
    
    - name: Run codecov
      run: go test -race -covermode=atomic -v ./... -coverprofile=coverage.txt

    - name: Upload coverage to Codecov
      if: success() && ${{ github.repository == 'jonasvinther/medusa' }}
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.txt
        token: ${{secrets.CODECOV}}
        fail_ci_if_error: true
